{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "tagsByResource": {
        "type": "object",
        "defaultValue": {}
    },
    "location": {
        "type": "string" 
    },
    "virtualNetworkName": {
        "type": "string",
        "defaultValue": "vnet" 
    },
    "virtualNetworkAddressPrefixes": {
        "type": "array",
        "metadata": {
            "description": "IPv4 address prefixes of the virtual network (array)" 
        }
    },
    "virtualNetworkAddressPrefixV6": {
        "type": "string",
        "defaultValue": "ace:cab:deca::/48",
        "metadata": {
            "description": "IPv6 virtual network prefix (single CIDR) for dual-stack deployment" 
        }
    },
    "Subnet1Name": {
        "type": "string",
        "defaultValue": "Frontend",
        "metadata": {
            "description": "The name of the 1st subnet" 
        }
    },
    "Subnet1Prefix": {
        "type": "string",
        "defaultValue": "10.0.1.0/24",
        "metadata": {
            "description": "The IPv4 address prefix of the 1st subnet" 
        }
    },
    "Subnet1PrefixV6": {
        "type": "string",
        "defaultValue": "ace:cab:deca:deed::/64",
        "metadata": { "description": "The IPv6 address prefix of the 1st subnet" 
        }
    },
    "Subnet2Name": {
        "type": "string",
        "defaultValue": "Backend",
        "metadata": {
            "description": "The name of the 2nd subnet" 
        }
    },
    "Subnet2Prefix": {
        "type": "string",
        "defaultValue": "10.0.2.0/24",
        "metadata": {
            "description": "The IPv4 address prefix of the 2nd subnet" 
        } 
    },
    "Subnet2PrefixV6": {
        "type": "string",
        "defaultValue": "ace:cab:deca:deee::/64",
        "metadata": {
            "description": "The IPv6 address prefix of the 2nd subnet" 
        }
    },
    "vmName": {
        "type": "string"
    },
    "deployNsg": {
        "type": "bool",
        "defaultValue": false 
    },
    "NewNsgName": {
        "type": "string",
        "defaultValue": "[concat(parameters('vmName'),'-nsg')]" 
    }
  },
  "variables": {
    "copy": [
      {
        "name": "toInternalRoutes",
        "count": "[length(parameters('virtualNetworkAddressPrefixes'))]",
        "input": {
          "name": "[concat('To-Internal-',copyIndex('toInternalRoutes'))]",
          "properties": {
            "addressPrefix": "[parameters('virtualNetworkAddressPrefixes')[copyIndex('toInternalRoutes')]]",
            "nextHopType": "None"
          }
        }
      }
    ],
    "localSubnetRoute": [
      {
        "name": "Local-Subnet",
        "properties": {
          "addressPrefix": "[parameters('subnet1Prefix')]",
          "nextHopType": "VnetLocal"
        }
      }
    ],
    "routesArray":"[concat(variables('localSubnetRoute'), variables('toInternalRoutes'))]",
    "nsgName": "[concat(parameters('vmName'), '-nsg')]",
    "nsgProperties": {
        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
    },
    "addressPrefixesUnion": "[union(parameters('virtualNetworkAddressPrefixes'), createArray(parameters('virtualNetworkAddressPrefixV6')))]",
    "subnet1AddressPrefixes": "[createArray(parameters('subnet1Prefix'), parameters('subnet1PrefixV6'))]",
    "subnet2AddressPrefixes": "[createArray(parameters('subnet2Prefix'), parameters('subnet2PrefixV6'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "name": "[parameters('subnet1Name')]",
      "properties": {
        "routes": "[variables('routesArray')]" 
      },
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/routeTables'), parameters('tagsByResource')['Microsoft.Network/routeTables'], json('{}')) ]"
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "name": "[parameters('subnet2Name')]",
      "properties": {
        "routes": [ {
            "name": "To-Internet",
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "None" 
            }
        } ]
     },
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/routeTables'), parameters('tagsByResource')['Microsoft.Network/routeTables'], json('{}')) ]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "name": "[parameters('virtualNetworkName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('subnet1Name'))]",
        "[resourceId('Microsoft.Network/routeTables', parameters('subnet2Name'))]"
      ],
      "properties": {
        "addressSpace": {
            "addressPrefixes": "[variables('addressPrefixesUnion')]" },
            "subnets": [
                {
                    "name": "[parameters('subnet1Name')]",
                    "properties": {
                        "addressPrefixes": "[variables('subnet1AddressPrefixes')]",
                        "routeTable": {
                            "id": "[resourceId('Microsoft.Network/routeTables', parameters('subnet1Name'))]" 
                        }
                    } 
                },
                {
                    "name": "[parameters('subnet2Name')]",
                    "properties": {
                        "addressPrefixes": "[variables('subnet2AddressPrefixes')]",
                        "routeTable": {
                            "id": "[resourceId('Microsoft.Network/routeTables', parameters('subnet2Name'))]" 
                        }
                    }
                } 
            ]
        },
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), parameters('tagsByResource')['Microsoft.Network/virtualNetworks'], json('{}')) ]"
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "condition": "[parameters('deployNsg')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "name": "[parameters('NewNsgName')]",
      "properties": {
        "securityRules": [
            {
                "name": "AllowAllInBound",
                "properties": {
                    "description": "Allow all inbound",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 100,
                    "direction": "Inbound"
                    }
            }
        ]
        },
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), parameters('tagsByResource')['Microsoft.Network/networkSecurityGroups'], json('{}')) ]"
    }
  ],
  "outputs": {
    "vnetId": {
        "type": "string",
        "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]" 
    },
    "vnetAddressPrefixes": {
        "type": "array",
        "value": "[variables('addressPrefixesUnion')]" 
    },
    "nsgProperties": {
        "type": "object",
        "value": "[variables('nsgProperties')]" 
    }
  }
}
